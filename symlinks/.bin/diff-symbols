#!/usr/bin/env bash

PROGNAME="$(basename "${0}")"
function usage() {
cat <<EOF
Usage:
${PROGNAME} <LIB1> <LIB2> [--arch <ARCH>] [--static] [--ignore-segment] [-h|--help]

Produce a diff of the exported symbols contained in two libraries.

If no architecture is specified, the symbols for each architecture in the
libraries are diffed.

If --static is specified, the libraries are assumed to be static archives
instead of shared libraries, and the output of 'nm' is filtered in a way
that makes more sense for static archives (since symbols are displayed per
object file).

If --ignore-segment is passed, the segment in which symbols are located is
ignored. This can be helpful when symbols were moved across segments between
libraries versions, but one is only looking for actual added or removed symbols
between those two versions.
EOF
}

for arg in $@; do
    if [[ "${arg}" == "-h" || "${arg}" == "--help" ]]; then
        usage
        exit 0
    fi
done

lib1="${1}"
lib2="${2}"
shift; shift

while [[ $# -gt 0 ]]; do
    case ${1} in
        --arch)
            archs="${2}"
            shift; shift
            ;;
        --static)
            static="true"
            shift
            ;;
        --ignore-segment)
            ignore_segment="true"
            shift
            ;;
        *)
            echo "Invalid argument '${1}'"
            usage
            exit 1
            ;;
    esac
done

if [ -z ${archs+x} ]; then
    archs=$((echo -n "$(lipo -archs "${lib1}")"; echo -n " $(lipo -archs "${lib2}")") | tr ' ' '\n' | sort | uniq)
fi

# Trim leading whitespace of whatever is piped into it.
function trim() {
    awk '{$1=$1};1'
}

if [[ "${ignore_segment}" == "true" ]]; then segment_flag=""; else segment_flag="-m"; fi

# Get the list of symbols exported by a shared library for the given architecture.
function symbols-shared() {
    lib="${1}"
    arch="${2}"
    nm -arch "${arch}" ${segment_flag} -g "${lib}" 2>/dev/null | cut -d ' ' -f 2- | trim | sort
}

# Get the list of exported symbols contained in a static library for the given
# architecture. We remove the name of the static archive before each object
# file, since that will obviously be different for each library.
function symbols-static() {
    lib="${1}"
    arch="${2}"
    nm -arch "${arch}" ${segment_flag} -og "${lib}" 2>/dev/null | cut -d ' ' -f 1,3- | tr -s ' ' | cut -d ':' -f 2- | sort
}

function symbols() {
    if [[ "${static}" == "true" ]]; then symbols-static ${@}; else symbols-shared ${@}; fi
}

for arch in $(echo ${archs}); do
    echo "Diff from ${lib1} to ${lib2} for architecture ${arch}"
    diff <(symbols "${lib1}" "${arch}") <(symbols "${lib2}" "${arch}")
done
